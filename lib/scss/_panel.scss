//
// + Panel
// =============================================================================
// Split these up into seperate files?


$panel-margin: $line-height / 4; // add to variables theme file?

%panel {
  @include padding(x 16, em);
  margin-top: em($panel-margin);
  border-radius: em($border-radius);
  background-color: $white;
  color: $color-first-8;
  box-shadow: $border;

  &:first-child {
    margin-top: 0;
  }

  // This messes up when there's two horizontal groups
  // Disabled for now - find a better way
  // + %panel-group {
  //   margin-top: em($panel-margin);
  // }

  @at-root .transparent & {
    background-color: $color-first-1;
  }
}

%panel-interactive {
  @extend %panel;

  &:hover,
  &:focus {
    background-color: remove-alpha($color-first-2, $white);
    z-index: 2; // is there a way to delay this until transition-out is complete?
  }

  // Imaginary CSS pseudo selector
  // Create an equivalent in JS using transitionend
  // &:transition-duration {
  //   z-index: 2;
  // }

  &:active {
    background-color: remove-alpha($color-first-3, $white);
  }

  @at-root .transparent & {
    &:hover,
    &:focus {
      background-color: $color-first-2;
    }

    &:active {
      background-color: $color-first-3;
    }
  }
}

%panel-group {
  display: flex;

  // This messes up when there's two horizontal groups
  // Disabled for now - find a better way
  // & + & {
  //   margin-top: em($panel-margin);
  // }

  > %panel,
  > %panel-interactive {
    margin: 0;
    border-radius: if($border-radius == null, null, unset);
    flex: 1;
  }
}

%panel-group-horizontal {
  @extend %panel-group;

  > %panel,
  > %panel-interactive {
    margin-left: em(-$border-thickness);

    &:first-child {
      @include radius($border-radius x x $border-radius, em);
      margin-left: 0;
    }

    &:last-child {
      @include radius(x $border-radius $border-radius x, em);
    }
  }
}

%panel-group-vertical {
  @extend %panel-group;
  flex-direction: column;

  > %panel,
  > %panel-interactive {
    margin-top: em(-$border-thickness);

    &:first-child {
      @include radius($border-radius $border-radius x x, em);
      margin-top: 0;
    }

    &:last-child {
      @include radius(x x $border-radius $border-radius, em);
    }
  }
}

%panel-group-horizontal-top {}

%panel-group-horizontal-bottom {}

%panel-group-vertical-top {}

%panel-group-vertical-bottom {
  margin-top: em(-$border-thickness);

  > %panel,
  > %panel-interactive {
    &:first-child {
      @include radius(0 x x x);
    }

    &:last-child {
      @include radius(x 0 x x);
    }
  }
}

// Test classes
.panel {
  @extend %panel;

  &.interactive {
    @extend %panel-interactive;
  }
}

.panel-group-horizontal {
  @extend %panel-group-horizontal;
}

.panel-group-vertical {
  @extend %panel-group-vertical;
}
